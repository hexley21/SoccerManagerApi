basePath: /api
definitions:
  ApiResponse:
    properties:
      data: {}
    type: object
  CreatePlayerPositionTranslationRequest:
    properties:
      code:
        $ref: '#/definitions/PlayerPositionCode'
      label:
        maxLength: 30
        minLength: 2
        type: string
      locale:
        type: string
    required:
    - code
    - label
    - locale
    type: object
  CreateTeamTranslationRequest:
    properties:
      label:
        type: string
      locale:
        type: string
    required:
    - label
    - locale
    type: object
  CreateTransferRequest:
    properties:
      player_id:
        type: integer
      price:
        type: number
    required:
    - player_id
    - price
    type: object
  DeleteTeamTranslationRequest:
    properties:
      locale:
        type: string
    required:
    - locale
    type: object
  DeletelayerPositionTranslationRequest:
    properties:
      code:
        $ref: '#/definitions/PlayerPositionCode'
      locale:
        type: string
    required:
    - code
    - locale
    type: object
  LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  PlayerPositionCode:
    enum:
    - GLK
    - DEF
    - MID
    - ATK
    type: string
    x-enum-varnames:
    - PlayerPositionCodeGLK
    - PlayerPositionCodeDEF
    - PlayerPositionCodeMID
    - PlayerPositionCodeATK
  PlayerPositionsResponse:
    additionalProperties:
      type: string
    type: object
  PlayerPositionsWithLocalesResponse:
    additionalProperties:
      additionalProperties:
        type: string
      type: object
    type: object
  PlayerResponse:
    properties:
      age:
        type: integer
      country_code:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      position_code:
        $ref: '#/definitions/PlayerPositionCode'
      price:
        type: integer
      team_id:
        type: integer
    type: object
  RefreshResponse:
    properties:
      access_token:
        type: string
    type: object
  RegisterRequest:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  RegisterResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  TeamResponse:
    properties:
      budget:
        type: integer
      country_code:
        type: string
      id:
        type: integer
      name:
        type: string
      total_players:
        type: integer
      user_id:
        type: integer
    type: object
  TeamTranslation:
    additionalProperties:
      type: string
    type: object
  TransferResponse:
    properties:
      id:
        type: integer
      listed_at:
        type: string
      player_id:
        type: integer
      price:
        type: integer
      seller_team_id:
        type: integer
    type: object
  UpdatePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  UpdatePlayerDataRequest:
    properties:
      country_code:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - country_code
    - first_name
    - last_name
    type: object
  UpdatePlayerPositionTranslationRequest:
    properties:
      code:
        $ref: '#/definitions/PlayerPositionCode'
      label:
        maxLength: 30
        minLength: 2
        type: string
      locale:
        type: string
    required:
    - code
    - label
    - locale
    type: object
  UpdateTeamRequest:
    properties:
      country_code:
        type: string
      name:
        type: string
    required:
    - country_code
    - name
    type: object
  UpdateTeamTranslationRequest:
    properties:
      label:
        type: string
      locale:
        type: string
    required:
    - label
    - locale
    type: object
  UpdateTransferRequest:
    properties:
      price:
        type: number
    required:
    - price
    type: object
  UserResponse:
    properties:
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
  echo.HTTPError:
    properties:
      message: {}
    type: object
host: localhost:80
info:
  contact: {}
  description: Soccer manager api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Soccer Manager
  version: 1.0.0-alpha0
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user with username and password and returns JWT
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Login user
      tags:
      - auth
  /v1/auth/logout:
    post:
      description: Logs out user by invalidating refresh token cookie
      responses:
        "204":
          description: No Content
      summary: Logout user
      tags:
      - auth
  /v1/auth/refresh:
    post:
      description: Get a new access token using refresh token from cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/RefreshResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Refresh access token
      tags:
      - auth
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns JWT tokens
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Register new user
      tags:
      - auth
  /v1/globe/countries:
    get:
      description: Get all available countries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List Countries
      tags:
      - globe
  /v1/globe/locales:
    get:
      description: Get all available locales
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List locales
      tags:
      - globe
  /v1/player-positions:
    get:
      description: Returns a list of player positions, optionally translated by locale
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/PlayerPositionsResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List player positions (localized)
      tags:
      - player-positions
  /v1/player-positions/codes:
    get:
      description: Returns a list of all available player position codes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List position codes
      tags:
      - player-positions
  /v1/player-positions/translations:
    delete:
      description: Deletes a specific player position translation by code and locale
      parameters:
      - description: Translation delete details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/DeletelayerPositionTranslationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Delete translation
      tags:
      - player-positions
    get:
      description: Returns all translations of player positions for all locales
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/PlayerPositionsWithLocalesResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List all translations
      tags:
      - player-positions
    post:
      consumes:
      - application/json
      description: Creates a new player position translation for a given code and
        locale
      parameters:
      - description: Translation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreatePlayerPositionTranslationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Create translation
      tags:
      - player-positions
    put:
      consumes:
      - application/json
      description: Updates an existing player position translation
      parameters:
      - description: Updated translation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePlayerPositionTranslationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Update translation
      tags:
      - player-positions
  /v1/players:
    get:
      description: Returns a paginated list of all players
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/PlayerResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all players
      tags:
      - players
  /v1/players/{player_id}:
    get:
      description: Returns a single player's data by ID
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/PlayerResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get player by ID
      tags:
      - players
    put:
      consumes:
      - application/json
      description: Updates a player's data by ID
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: integer
      - description: Player data to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePlayerDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Update player data
      tags:
      - players
  /v1/players/{player_id}/transfer:
    get:
      description: Returns a transfer record of a player
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/TransferResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get transfer of a player
      tags:
      - transfers
  /v1/teams:
    get:
      description: Returns a paginated list of teams
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/TeamResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List teams
      tags:
      - team
  /v1/teams/{team_id}:
    get:
      description: Returns a single team's data by ID
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/TeamResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get team by ID
      tags:
      - team
  /v1/teams/{team_id}/locales:
    get:
      description: Returns a list of available translation locales
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/TeamResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get available locales for team by ID
      tags:
      - team
  /v1/teams/{team_id}/players:
    get:
      description: Returns a paginated list of players for the specified team
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/PlayerResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get players by team ID
      tags:
      - players
  /v1/teams/{team_id}/transfers:
    get:
      description: Returns a list of transfers for the provided team ID (paginated)
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/TransferResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List transfers by team ID
      tags:
      - transfers
  /v1/teams/me:
    put:
      consumes:
      - application/json
      description: Updates the name and country code of the authenticated user's team
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Update team
      tags:
      - team
  /v1/teams/me/translations:
    delete:
      description: Deletes a team translation for the authenticated user's team
      parameters:
      - description: Delete details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/DeleteTeamTranslationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Delete team translation
      tags:
      - team
    get:
      description: Returns translations for the authenticated user's team
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/TeamTranslation'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: List translations
      tags:
      - team
    post:
      consumes:
      - application/json
      description: Creates a new translation for the authenticated user's team
      parameters:
      - description: Translation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateTeamTranslationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Create team translation
      tags:
      - team
    put:
      consumes:
      - application/json
      description: Updates an existing translation for the authenticated user's team
      parameters:
      - description: Translation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateTeamTranslationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Update team translation
      tags:
      - team
  /v1/transfers:
    get:
      description: Returns a list of all transfers (paginated)
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/TransferResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: List all transfers
      tags:
      - transfers
    post:
      consumes:
      - application/json
      description: Creates a new transfer listing
      parameters:
      - description: Transfer details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateTransferRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Create transfer
      tags:
      - transfers
  /v1/transfers/{transfer_id}:
    delete:
      description: Deletes a transfer by ID
      parameters:
      - description: Transfer ID
        in: path
        name: transfer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Delete transfer
      tags:
      - transfers
    get:
      description: Returns a transfer by id
      parameters:
      - description: Transfer ID
        in: path
        name: transfer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/TransferResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get transfer with id
      tags:
      - transfers
    put:
      consumes:
      - application/json
      description: Updates an existing transfer by ID
      parameters:
      - description: Transfer ID
        in: path
        name: transfer_id
        required: true
        type: integer
      - description: Updated transfer info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Update transfer
      tags:
      - transfers
  /v1/transfers/{transfer_id}/buy:
    post:
      description: Purchases a player in a specific transfer listing
      parameters:
      - description: Transfer ID
        in: path
        name: transfer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Buy a player
      tags:
      - transfers
  /v1/users:
    get:
      description: Get a paginated list of users
      parameters:
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/UserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: List users (ADMIN)
      tags:
      - users
  /v1/users/{user_id}/players:
    get:
      description: Returns a paginated list of players for the specified user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Pagination cursor
        in: query
        name: cursor
        type: integer
      - description: Number of items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/PlayerResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get players by user ID
      tags:
      - players
  /v1/users/{user_id}/team:
    get:
      description: Returns a single team by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/TeamResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get team by user ID
      tags:
      - team
  /v1/users/me:
    delete:
      description: Delete the authenticated user's account
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Delete current user
      tags:
      - users
    get:
      description: Get the authenticated user's data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Get current user
      tags:
      - users
  /v1/users/me/change-password:
    put:
      consumes:
      - application/json
      description: Change the authenticated user's password
      parameters:
      - description: Password update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - AccessToken: []
      summary: Change current user's password
      tags:
      - users
schemes:
- http
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
